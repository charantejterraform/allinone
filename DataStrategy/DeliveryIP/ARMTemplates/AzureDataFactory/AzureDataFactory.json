{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dataFactoryName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Azure Factory to create"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all Resources."
      }
    },
    "gitConfigureLater": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Boolean to define whether or not to configure git during template deployment."
      }
    },
    "gitRepoType": {
      "type": "string",
      "defaultValue": "FactoryVSTSConfiguration",
      "metadata": {
        "description": "Optional. Repo type - can be 'FactoryVSTSConfiguration' or 'FactoryGitHubConfiguration'. Default is 'FactoryVSTSConfiguration'."
      }
    },
    "gitAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The account name."
      }
    },
    "gitProjectName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The project name. Only relevant for 'FactoryVSTSConfiguration'."
      }
    },
    "gitRepositoryName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The repository name."
      }
    },
    "gitCollaborationBranch": {
      "type": "string",
      "defaultValue": "main",
      "metadata": {
        "description": "Optional. The collaboration branch name. Default is 'main'."
      }
    },
    "gitRootFolder": {
      "type": "string",
      "defaultValue": "/",
      "metadata": {
        "description": "Optional. The root folder path name. Default is '/'."
      }
    },
    "diagnosticSettingName": {
      "type": "string",
      "defaultValue": "service",
      "metadata": {
        "description": "Optional. The name of the Diagnostic setting."
      }
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 365,
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource identifier of the Diagnostic Storage Account. Use the format /subscriptions/xxx-xxx-xxx-xxx-xxx/resourceGroups/dependencies-rg/providers/Microsoft.Storage/storageAccounts/xxxxxxxxxxxxx"
      }
    },
    "workspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource identifier of Log Analytics."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
      },
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution id (GUID). This GUID must be previously registered"
      }
    }
  },
  "variables": {
    "diagnosticsMetrics": [
      {
        "category": "AllMetrics",
        "timeGrain": null,
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      }
    ],
    "diagnosticsLogs": [
      {
        "category": "ActivityRuns",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "PipelineRuns",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "TriggerRuns",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "SSISPackageEventMessages",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "SSISPackageExecutableStatistics",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "SSISPackageEventMessageContext",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "SSISPackageExecutionComponentPhases",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "SSISPackageExecutionDataStatistics",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      },
      {
        "category": "SSISIntegrationRuntimeLogs",
        "enabled": true,
        "retentionPolicy": {
          "enabled": true,
          "days": "[parameters('diagnosticLogsRetentionInDays')]"
        }
      }
    ]
  },
  "resources": [
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[concat('pid-', parameters('cuaId'))]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": [
          ]
        }
      }
    },
    {
      "type": "Microsoft.DataFactory/factories",
      "apiVersion": "2018-06-01",
      "name": "[parameters('dataFactoryName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "repoConfiguration": "[if(bool(parameters('gitConfigureLater')), json('null'), json(concat('{\"type\": \"', parameters('gitRepoType'), '\",','\"accountName\": \"', parameters('gitAccountName'), '\",','\"repositoryName\": \"', parameters('gitRepositoryName'), '\",', if(equals(parameters('gitRepoType'), 'FactoryVSTSConfiguration'), concat('\"projectName\": \"', parameters('gitProjectName'), '\",'), ''),'\"collaborationBranch\": \"', parameters('gitCollaborationBranch'), '\",','\"rootFolder\": \"', parameters('gitRootFolder'), '\"}')))]"

      },
      "resources": [
        {
          "type": "Microsoft.DataFactory/factories/providers/diagnosticsettings",
          "apiVersion": "2017-05-01-preview",
          "name": "[concat(parameters('dataFactoryName'), '/Microsoft.Insights/', parameters('diagnosticSettingName'))]",
          "condition": "[or(not(empty(parameters('diagnosticStorageAccountId'))),not(empty(parameters('workspaceId'))))]",
          "dependsOn": [
            "[concat('Microsoft.DataFactory/factories/', parameters('dataFactoryName'))]"
          ],
          "properties": {
            "storageAccountId": "[if(empty(parameters('diagnosticStorageAccountId')), json('null'), parameters('diagnosticStorageAccountId'))]",
            "workspaceId": "[if(empty(parameters('workspaceId')), json('null'), parameters('workspaceId'))]",
            "metrics": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId'))), json('null'), variables('diagnosticsMetrics'))]",
            "logs": "[if(and(empty(parameters('diagnosticStorageAccountId')), empty(parameters('workspaceId'))), json('null'), variables('diagnosticsLogs'))]"
          }
        }
      ]
    }
  ],
  "outputs": {
    "dataFactoryName": {
      "type": "string",
      "value": "[parameters('dataFactoryName')]",
      "metadata": {
        "description": "The Name of the Azure Data Factory instance"
      }
    },
    "dataFactoryResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DataFactory/factories',parameters('dataFactoryName'))]",
      "metadata": {
        "description": "The Resource Id of the Data factory"
      }
    },
    "dataFactoryResourceGroup": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the Resource Group with the Data factory"
      }
    }
  }
}
