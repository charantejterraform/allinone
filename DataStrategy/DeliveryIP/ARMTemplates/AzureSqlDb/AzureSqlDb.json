{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serverName": {
      "type": "string",
      "defaultValue": "[uniqueString('sql', resourceGroup().id)]",
      "metadata": {
        "description": "The name of the SQL logical server."
      }
    },
    "sqlDbName": {
      "type": "string",
      "defaultValue": "SampleDB",
      "metadata": {
        "description": "The name of the SQL Database."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "administratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The administrator username of the SQL logical server."
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The administrator password of the SQL logical server."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[concat('sqlaudit', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the auditing storage account."
      }
    },
    "enableAuditing": {
      "type": "bool",
      "defaultValue": false
    }
  },
  "variables": {
    "StorageBlobContributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
    "uniqueRoleGuid": "[guid(resourceId('Microsoft.Storage/storageAccounts',  parameters('storageAccountName')), variables('storageBlobContributor'), resourceId('Microsoft.Sql/servers', parameters('serverName')))]"
  },
  "resources": [
    {
      "condition": "[parameters('enableAuditing')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2019-06-01",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      },
      "resources": [
        {
          "condition": "[parameters('enableAuditing')]",
          "type": "Microsoft.Storage/storageAccounts/providers/roleAssignments",
          "apiVersion": "2020-03-01-preview",
          "name": "[concat(parameters('storageAccountName'), '/Microsoft.Authorization/', variables('uniqueRoleGuid'))]",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
          ],
          "properties": {
            "roleDefinitionId": "[variables('StorageBlobContributor')]",
            "principalId": "[reference(resourceId('Microsoft.Sql/servers', parameters('serverName')), '2020-08-01-preview', 'Full').identity.principalId]",
            "scope": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
            "principalType": "ServicePrincipal"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2020-02-02-preview",
      "name": "[parameters('serverName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "publicNetworkAccess": "Enabled"
      },
      "resources": [
        {
          "name": "[parameters('sqlDbName')]",
          "type": "databases",
          "apiVersion": "2020-08-01-preview",
          "location": "[parameters('location')]",
          "sku": {
            "name": "Basic",
            "tier": "Basic"
          },
          "resources": [
            {
              "type": "transparentDataEncryption",
              "apiVersion": "2021-02-01-preview",
              "name": "current",
              "properties": {
                "state": "Enabled"
              },
              "dependsOn": [
                "[parameters('sqlDbName')]"
              ]
            }
          ],
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', concat(parameters('serverName')))]"
          ]
        },
        {
          "condition": "[parameters('enableAuditing')]",
          "type": "auditingSettings",
          "apiVersion": "2021-02-01-preview",
          "name": "default",
          "properties": {
            "auditActionsAndGroups": [ "BATCH_COMPLETED_GROUP", "SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP", "FAILED_DATABASE_AUTHENTICATION_GROUP" ],
            "isAzureMonitorTargetEnabled": true,
            "isDevopsAuditEnabled": true,
            "isStorageSecondaryKeyInUse": false,
            "queueDelayMs": 5000,
            "retentionDays": 30,
            "state": "Enabled",
            "storageAccountSubscriptionId": "[subscription().subscriptionId]",
            "storageEndpoint": "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net')]"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', concat(parameters('serverName')))]"
          ]
        }
      ]
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2021-02-01-preview",
      "name": "[concat(parameters('serverName'), '/AllowAllWindowsAzureIps')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "0.0.0.0"
      }
    }
  ]
}