{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "connections_sql_name": {
            "type": "string"
        },
        "LogicAppLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "LogicAppName": {
            "type": "string"
        },
        "SqlServerName": {
            "type": "string",
            "metadata": {
                "description": "SQL server name"
            },
            "defaultValue": "<YourSQLServer>.database.windows.net"
        },
        "DatabaseName": {
            "type": "string",
            "metadata": {
                "description": "SQL database name"
            },
            "defaultValue": "MetadataControl"
        },
        "DataFactoryName": {
            "type": "string",
            "defaultValue": "<YourDataFactoryName>",
            "metadata": {
                "description": "The name of your Data Factory containing the metadata ingestion pipelines"
            }
        },
        "PipelineReferenceName": {
            "type": "string",
            "defaultValue": "<YourDataFactoryPipelineName>",
            "metadata": {
                "description": "The name of your Data Factory Metadata ingestion pipeline"
            }
        },
        "ResourceGroupName": {
            "type": "string",
            "defaultValue": "<YourDataFactoryResourceGroupName>",
            "metadata": {
                "description": "The name of your Data Factory Resource Group Name"
            }
        },
        "SubscriptionId": {
            "type": "string",
            "defaultValue": "<YourDataFactorySubscriptionId>",
            "metadata": {
                "description": "The subscriptionid where your Data Factory lives"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[parameters('connections_sql_name')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "alternativeParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId ,'/providers/Microsoft.Web/locations/', resourceGroup().location ,'/managedApis/sql')]"
                },
                "customParameterValues": {},
                "displayName": "[parameters('connections_sql_name')]",
                "parameterValueSet": {
                    "name": "oauthMI",
                    "values": {}
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2019-05-01",
            "name": "[parameters('LogicAppName')]",
            "location": "[parameters('LogicAppLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]"
            ],
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "AuditRequestWorkflowEnded": {
                            "inputs": {
                                "body": {
                                    "AuditMessage": "Workflow Ended",
                                    "HttpRequest": "@{body('ParseHttpRequest')}",
                                    "MetaDataInserted": "@if(equals(variables('MetadataInserted'), true), 1, 0)"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                            },
                            "runAfter": {
                                "IfCompleteHttpRequest": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "AuditRequestWorkflowStarted": {
                            "inputs": {
                                "body": {
                                    "AuditMessage": "Workflow Started",
                                    "HttpRequest": "@{triggerBody()}",
                                    "MetaDataInserted": false
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        },
                        "IfCompleteHttpRequest": {
                            "actions": {
                                "CheckIfSourceExists": {
                                    "inputs": {
                                        "body": {
                                            "SourceContainerName": "@{triggerBody()?['SourceContainerName']}",
                                            "SourceFolderPath": "@{triggerBody()?['SourceFolderPath']}"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_GetIngestionRecordBySource]'))}"
                                    },
                                    "runAfter": {
                                        "IfCreateTriggerIsTrue": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                },
                                "IfCreateTriggerIsTrue": {
                                    "actions": {
                                        "SetADFTriggerName": {
                                            "inputs": {
                                                "name": "AdfTriggerName",
                                                "value": "@{concat('TR_',body('ParseHttpRequest')?['SourceContainerName'],'_',body('ParseHttpRequest')?['SourceFolderPath'])}"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "AuditADFVariableRequest": {
                                                "inputs": {
                                                    "body": {
                                                        "AuditMessage": "No ADF Trigger created for new data source",
                                                        "HttpRequest": "@{body('ParseHttpRequest')}",
                                                        "MetaDataInserted": false
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['sql']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                                                },
                                                "runAfter": {},
                                                "type": "ApiConnection"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('ParseHttpRequest')?['CreateTrigger']",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                },
                                "InsertNewSourceIfNotExists": {
                                    "actions": {
                                        "AuditSuccessRequest": {
                                            "inputs": {
                                                "body": {
                                                    "AuditMessage": "New data source enrolled in ingestion",
                                                    "HttpRequest": "@{body('ParseHttpRequest')}",
                                                    "MetaDataInserted": true
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                                            },
                                            "runAfter": {
                                                "InsertRecordInControlTable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "CreateTriggerForNewDataSource": {
                                            "actions": {
                                                "AuditRequestCreateADFTrigger": {
                                                    "inputs": {
                                                        "body": {
                                                            "AuditMessage": "ADF Trigger created for new data source",
                                                            "HttpRequest": "@{body('ParseHttpRequest')}",
                                                            "MetaDataInserted": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['sql']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                                                    },
                                                    "runAfter": {
                                                        "CreateADFTrigger": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "CreateADFTrigger": {
                                                    "inputs": {
                                                        "authentication": {
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "body": {
                                                            "properties": {
                                                                "pipelines": [
                                                                    {
                                                                        "parameters": {
                                                                            "DataSourceName": "@{body('ParseHttpRequest')?['SourceFolderPath']}"
                                                                        },
                                                                        "pipelineReference": {
                                                                            "referenceName": "@parameters('PipelineReferenceName')",
                                                                            "type": "PipelineReference"
                                                                        }
                                                                    }
                                                                ],
                                                                "type": "ScheduleTrigger",
                                                                "typeProperties": {
                                                                    "recurrence": {
                                                                        "endTime": "@body('ParseHttpRequest')?['EndTime']",
                                                                        "frequency": "@body('ParseHttpRequest')?['Frequency']",
                                                                        "interval": "@body('ParseHttpRequest')?['Interval']",
                                                                        "startTime": "@body('ParseHttpRequest')?['StartTime']",
                                                                        "timeZone": "@body('ParseHttpRequest')?['TimeZone']"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "headers": {
                                                            "Content-Type": "application/json"
                                                        },
                                                        "method": "PUT",
                                                        "uri": "https://management.azure.com/subscriptions/@{parameters('SubscriptionId')}/resourceGroups/@{parameters('ResourceGroupName')}/providers/Microsoft.DataFactory/factories/@{parameters('AdfName')}/triggers/@{concat('TR_',body('ParseHttpRequest')?['SourceContainerName'],'_',body('ParseHttpRequest')?['SourceFolderPath'])}?api-version=2018-06-01"
                                                    },
                                                    "runAfter": {},
                                                    "type": "Http"
                                                },
                                                "StartTriggerUponCreation": {
                                                    "actions": {
                                                        "AuditRequestStartADFTrigger": {
                                                            "inputs": {
                                                                "body": {
                                                                    "AuditMessage": "ADF Trigger Started for new data source",
                                                                    "HttpRequest": "@{body('ParseHttpRequest')}",
                                                                    "MetaDataInserted": true
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                                                            },
                                                            "runAfter": {
                                                                "StartADFTrigger": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "StartADFTrigger": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "POST",
                                                                "uri": "https://management.azure.com/subscriptions/@{parameters('SubscriptionId')}/resourceGroups/@{parameters('ResourceGroupName')}/providers/Microsoft.DataFactory/factories/@{parameters('AdfName')}/triggers/@{concat('TR_',body('ParseHttpRequest')?['SourceContainerName'],'_',body('ParseHttpRequest')?['SourceFolderPath'])}/start?api-version=2018-06-01"
                                                            },
                                                            "runAfter": {},
                                                            "type": "Http"
                                                        }
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "AuditRequestStoppedADFTrigger": {
                                                                "inputs": {
                                                                    "body": {
                                                                        "AuditMessage": "ADF Trigger not started for new data source",
                                                                        "HttpRequest": "@{body('ParseHttpRequest')}",
                                                                        "MetaDataInserted": true
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['sql']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                                                                },
                                                                "runAfter": {},
                                                                "type": "ApiConnection"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@body('ParseHttpRequest')?['StartTriggerUponCreation']",
                                                                    true
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "AuditRequestCreateADFTrigger": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "else": {
                                                "actions": {
                                                    "AuditRequestNoADFTrigger": {
                                                        "inputs": {
                                                            "body": {
                                                                "AuditMessage": "No ADF Trigger created for new data source",
                                                                "HttpRequest": "@{body('ParseHttpRequest')}",
                                                                "MetaDataInserted": true
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                                                        },
                                                        "runAfter": {},
                                                        "type": "ApiConnection"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@body('ParseHttpRequest')?['CreateTrigger']",
                                                            true
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "SetMetadataVariableTrue": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "InsertRecordInControlTable": {
                                            "inputs": {
                                                "body": {
                                                    "SinkFileSystem": "@{triggerBody()?['SinkFileSystem']}",
                                                    "SinkFolderPath": "@{triggerBody()?['SinkFolderPath']}",
                                                    "SourceContainerName": "@{triggerBody()?['SourceContainerName']}",
                                                    "SourceFolderPath": "@{triggerBody()?['SourceFolderPath']}",
                                                    "TriggerName": "@variables('AdfTriggerName')"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['sql']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateIngestionRecord]'))}"
                                            },
                                            "runAfter": {},
                                            "type": "ApiConnection"
                                        },
                                        "SetMetadataVariableTrue": {
                                            "inputs": {
                                                "name": "MetadataInserted",
                                                "value": true
                                            },
                                            "runAfter": {
                                                "AuditSuccessRequest": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "AuditFailedRequest": {
                                                "inputs": {
                                                    "body": {
                                                        "AuditMessage": "Source container and folder already enrolled in ingestion",
                                                        "HttpRequest": "@{body('ParseHttpRequest')}",
                                                        "MetaDataInserted": false
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['sql']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                                                },
                                                "runAfter": {},
                                                "type": "ApiConnection"
                                            },
                                            "SetMetadataVariableFalse2": {
                                                "inputs": {
                                                    "name": "MetadataInserted",
                                                    "value": false
                                                },
                                                "runAfter": {
                                                    "AuditFailedRequest": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "SetVariable"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@variables('SourceId')",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "SetConditionalVariable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "SetConditionalVariable": {
                                    "inputs": {
                                        "name": "SourceId",
                                        "value": "@if(empty(body('CheckIfSourceExists')['ResultSets']['Table1']), 0, 1)"
                                    },
                                    "runAfter": {
                                        "CheckIfSourceExists": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                }
                            },
                            "else": {
                                "actions": {
                                    "AuditRequest": {
                                        "inputs": {
                                            "body": {
                                                "AuditMessage": "HTTP request body incomplete",
                                                "HttpRequest": "@{body('ParseHttpRequest')}",
                                                "MetaDataInserted": false
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent(parameters('SqlServerName')))},@{encodeURIComponent(encodeURIComponent(parameters('DatabaseName')))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[usp_CreateAuditRequestRecord]'))}"
                                        },
                                        "runAfter": {},
                                        "type": "ApiConnection"
                                    },
                                    "SetMetadataVariableFalse": {
                                        "inputs": {
                                            "name": "MetadataInserted",
                                            "value": false
                                        },
                                        "runAfter": {
                                            "AuditRequest": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "SetVariable"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@if(or(empty(body('ParseHttpRequest')?['SinkFileSystem']),empty(body('ParseHttpRequest')?['SinkFolderPath']),empty(body('ParseHttpRequest')?['SourceContainerName']), empty(body('ParseHttpRequest')?['SourceFolderPath'])),0,1)",
                                            1
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "InitializeMetadataVariabl": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "InitializeADFTriggerVariable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AdfTriggerName",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "InitializeConditionalVariable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "InitializeConditionalVariable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SourceId",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            },
                            "runAfter": {
                                "ParseHttpRequest": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "InitializeMetadataVariabl": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "MetadataInserted",
                                        "type": "boolean"
                                    }
                                ]
                            },
                            "runAfter": {
                                "InitializeADFTriggerVariable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "ParseHttpRequest": {
                            "inputs": {
                                "content": "@triggerBody()",
                                "schema": {
                                    "properties": {
                                        "CreateTrigger": {
                                            "type": "boolean"
                                        },
                                        "EndTime": {
                                            "type": "string"
                                        },
                                        "Frequency": {
                                            "type": "string"
                                        },
                                        "Interval": {
                                            "type": "integer"
                                        },
                                        "SinkFileSystem": {
                                            "type": "string"
                                        },
                                        "SinkFolderPath": {
                                            "type": "string"
                                        },
                                        "SourceContainerName": {
                                            "type": "string"
                                        },
                                        "SourceFolderPath": {
                                            "type": "string"
                                        },
                                        "StartTime": {
                                            "type": "string"
                                        },
                                        "StartTriggerUponCreation": {
                                            "type": "boolean"
                                        },
                                        "TimeZone": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "AuditRequestWorkflowStarted": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "AdfName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "DatabaseName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "PipelineReferenceName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "ResourceGroupName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "SqlServerName": {
                            "defaultValue": "",
                            "type": "String"
                        },
                        "SubscriptionId": {
                            "defaultValue": "",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "properties": {
                                        "CreateTrigger": {
                                            "type": "boolean"
                                        },
                                        "EndTime": {
                                            "type": "string"
                                        },
                                        "Frequency": {
                                            "type": "string"
                                        },
                                        "Interval": {
                                            "type": "integer"
                                        },
                                        "SinkFileSystem": {
                                            "type": "string"
                                        },
                                        "SinkFolderPath": {
                                            "type": "string"
                                        },
                                        "SourceContainerName": {
                                            "type": "string"
                                        },
                                        "SourceFolderPath": {
                                            "type": "string"
                                        },
                                        "StartTime": {
                                            "type": "string"
                                        },
                                        "StartTriggerUponCreation": {
                                            "type": "boolean"
                                        },
                                        "TimeZone": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "operationOptions": "EnableSchemaValidation",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "sql": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_sql_name'))]",
                                "connectionName": "[parameters('connections_sql_name')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                },
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'sql')]"
                            }
                        }
                    },
                    "DatabaseName": {
                        "value": "[parameters('DatabaseName')]"
                    },
                    "SqlServerName": {
                        "value": "[parameters('SqlServerName')]"
                    },
                    "AdfName": {
                        "value": "[parameters('DataFactoryName')]"
                    },
                    "PipelineReferenceName": {
                        "value": "[parameters('PipelineReferenceName')]"
                    },
                    "ResourceGroupName": {
                        "value": "[parameters('ResourceGroupName')]"
                    },
                    "SubscriptionId": {
                        "value": "[parameters('SubscriptionId')]"
                    }
                }
            }
        }
    ]
}